version: 2.1
jobs:
      run_tests:
            docker:
                  - image: circleci/python:3.8.2
            steps:
                  - checkout
                  - restore_cache:
                        key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
                  - run:
                        name: Install Python Dependencies and setup a venv
                        command: |
                              echo 'export PATH=~$PATH:~/.local/bin' >> $BASH_ENV && source $BASH_ENV
                              python3 -m venv venv
                              . venv/bin/activate
                              pip install -Iv Cython==0.29.12 numpy==1.19.1
                              pip install --user -r requirements.txt
                  - save_cache:
                        key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
                        paths:
                              - "venv"
                  - run:
                        name: Linting Codebase
                        command: |
                              find . -type f -name "*.py" -not -path "./util/*" | xargs -L1 python3.8 util/linter.py
                  - run:
                        name: Run Integration Tests
                        command: |
                              pytest --cov=./ --junitxml=test-reports/junit.xml --html=test-reports/pytest_report.html --self-contained-html test.py
                  - store_test_results:
                        path: test-reports
                  - store_artifacts:
                        path: test-reports
                  - run:
                        name: Upload CodeCov Report
                        command: |
                              codecov --token=3a29a7f0-97b0-407b-8bb6-d89f5136bd8a
workflows:
      build_test:
            jobs:
                  - run_tests
